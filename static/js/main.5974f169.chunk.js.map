{"version":3,"sources":["Components/Cards/data.js","Components/Chart/ChartGlobal.js","Components/Chart/ChartCountry.js","Components/Cards/Cards.js","App.js","serviceWorker.js","index.js"],"names":["axios","require","datas","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","a","res","confirmed","newLabels","forEach","rs","push","totalConfirmed","reportDate","message","getDaily","ChartGlobal","props","className","ChartCountry","iso2","useParams","iso","useState","setConfirmed","recovered","setRecovered","deaths","setDeaths","useEffect","value","getData","borderWidth","Cards","countries","setCountries","option","setOption","history","useHistory","console","log","getCountry","old","sessionStorage","getItem","getOld","end","src","alt","width","height","onChange","e","setItem","target","replace","go","get","then","map","ct","index","iso3","key","name","exact","path","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.5974f169.chunk.js","sourcesContent":["let axios = require(\"axios\");\n\n\nconst datas = {\n    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n    datasets: [\n      {\n        label: 'Global Data',\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'rgba(75,192,192,1)',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(75,192,192,1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: [65, 59, 80, 81, 56, 55, 40]\n      }\n    ]\n  };\n\nlet getDaily = async () => {\n    try {\n        let res = await axios('https://covid19.mathdro.id/api/daily');\n        let confirmed = [];\n        let newLabels = [];\n        res.data.forEach(rs => {\n            confirmed.push(rs.totalConfirmed);\n            newLabels.push(rs.reportDate);\n        });\n        datas['datasets'][0]['data'] = confirmed;\n        datas['labels'] = newLabels;\n    } catch (error) {\n        throw error.message;\n    }\n}\n\ngetDaily();\nexport {datas as data};","import React from 'react';\nimport {Line} from 'react-chartjs-2';\nimport {data} from '../Cards/data';\n\nfunction ChartGlobal(props) {\n    return (\n        <div className=\"mt-5\">\n            <Line data={data}/>\n        </div>\n    );\n}\n\nexport default ChartGlobal","import React, {useEffect,useState} from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { Bar } from 'react-chartjs-2';\n\nfunction ChartCountry(props) {\nlet iso = useParams();\nlet iso2 = iso.iso;    \n\nconst [confirmed, setConfirmed] = useState('');\nconst [recovered, setRecovered] = useState('');\nconst [deaths, setDeaths] = useState('');\n\n\n\nuseEffect(() => {\n    const getData = async() => {\n        try {\n            let data = await axios(`https://covid19.mathdro.id/api/countries/${iso2}`); \n            setConfirmed(data.data.confirmed.value);\n            setRecovered(data.data.recovered.value);\n            setDeaths(data.data.deaths.value);\n        } catch (error) {\n            throw error.message;\n        }\n    }\n    getData();\n},[iso2])\n\nlet data = {\n    labels: ['Terkonfirmasi', 'Sembuh', 'Meniggal'],\n    datasets: [{\n        label: \"Data \" + iso2,\n        data: [confirmed,recovered,deaths],\n        backgroundColor: [\n            'rgba(255, 99, 132, 0.2)',\n            'rgba(54, 162, 235, 0.2)',\n            'rgba(255, 206, 86, 0.2)',\n        ],\n        borderColor: [\n            'rgba(255, 99, 132, 1)',\n            'rgba(54, 162, 235, 1)',\n            'rgba(255, 206, 86, 1)',\n            'rgba(75, 192, 192, 1)',\n            'rgba(153, 102, 255, 1)',\n            'rgba(255, 159, 64, 1)'\n        ],\n        borderWidth: 1\n    }]\n}\n\nreturn (\n        <div>\n            <Bar data={data}/>\n        </div>\n    );\n}\n\nexport default ChartCountry;","import React, {useState, useEffect} from 'react';\nimport CountUp from 'react-countup';\nimport axios from 'axios';\nimport {Switch, Route, useHistory} from 'react-router-dom';\nimport ChartGlobal from '../Chart/ChartGlobal';\nimport ChartCountry from '../Chart/ChartCountry';\n\nfunction Cards(props) {\n\n    const [confirmed, setConfirmed] = useState('');\n    const [recovered, setRecovered] = useState('');\n    const [deaths, setDeaths] = useState('');\n    const [countries, setCountries] = useState([]);\n    const [option, setOption] = useState('');\n    // const [dailyC, setDailyC] = useState([]);\n    let history = useHistory();\n\n    const getOld = () => {\n        let old = sessionStorage.getItem('country');\n        if (old === null) {\n            old = \"global\"\n            setOption(old);\n        } else {\n            setOption(old);\n        }\n    }\n\n    const getData = async () => {\n        try {\n            let data = await axios('https://covid19.mathdro.id/api');\n            setConfirmed(data.data.confirmed.value);\n            setRecovered(data.data.recovered.value);\n            setDeaths(data.data.deaths.value);\n            console.log(data.data.recovered.value);\n        } catch (error) {\n            throw error.message;\n        }\n    }\n\n    const getCountry = async () => {\n        try {\n            let data = await axios('https://covid19.mathdro.id/api/countries');\n            setCountries(data.data.countries);\n        } catch (error) {\n            throw error.message;\n        }\n    }\n\n    const changeHandler = (e) => {\n        let old = sessionStorage.setItem('country', e.target.value);\n        setOption(old)\n        console.log('bisa');\n        if (e.target.value === \"global\") {\n            history.replace('/covid-tracker');\n            history.go('/covid-tracker');\n        } else {\n            let a = e.target.value;\n            axios\n                .get(`https://covid19.mathdro.id/api/countries/${e.target.value}`)\n                .then(data => {\n                    setConfirmed(data.data.confirmed.value);\n                    setRecovered(data.data.recovered.value);\n                    setDeaths(data.data.deaths.value);\n                    history.push(`/${a}`)\n                })\n        }\n    }\n\n    useEffect(() => {\n        getData();\n        getCountry();\n        getOld();\n    }, [])\n\n    return (\n        <div className=\"container mx-auto d-block mt-5\">\n            <div className=\"row\">\n                {/* <NavLink to=\"/c/asd\">asd</NavLink> */}\n                <div className=\"mt-2 col-sm-12 col-md-6 col-lg-6 col-xl-4\">\n                    <div className=\"card bg-danger img-card box-primary-shadow\">\n                        <div className=\"card-body\">\n                            <div className=\"d-flex\">\n                                <div className=\"text-white\">\n                                    <p className=\"text-white mb-0\">Total Positif</p>\n                                    <h2 className=\"mb-0 number-font\"><CountUp end={confirmed}/></h2>\n                                    <p className=\"text-white mb-0\">Orang</p>\n                                </div>\n                                <div className=\"ml-auto\">\n                                    <img src=\"/covid-tracker/asset/img/sad.png\" alt=\"Positif\" width=\"50\" height=\"50\"/>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"mt-2 col-sm-12 col-md-6 col-lg-6 col-xl-4\">\n                    <div className=\"card bg-success img-card box-secondary-shadow\">\n                        <div className=\"card-body\">\n                            <div className=\"d-flex\">\n                                <div className=\"text-white\">\n                                    <p className=\"text-white mb-0\">Total Sembuh</p>\n                                    <h2 className=\"mb-0 number-font\"><CountUp end={recovered}/></h2>\n                                    <p className=\"text-white mb-0\">Orang</p>\n                                </div>\n                                <div className=\"ml-auto\">\n                                    <img src=\"/covid-tracker/asset/img/happy.png\" alt=\"Sembuh\" width=\"50\" height=\"50\"/>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"mt-2 col-sm-12 col-md-6 col-lg-6 col-xl-4\">\n                    <div className=\"card bg-secondary img-card box-success-shadow\">\n                        <div className=\"card-body\">\n                            <div className=\"d-flex\">\n                                <div className=\"text-white\">\n                                    <p className=\"text-white mb-0\">Total Meninggal</p>\n                                    <h2 className=\"mb-0 number-font\"><CountUp end={deaths}/></h2>\n                                    <p className=\"text-white mb-0\">Orang</p>\n                                </div>\n                                <div className=\"ml-auto\">\n                                    <img src=\"/covid-tracker/asset/img/dead.png\" alt=\"Meninggal\" width=\"50\" height=\"50\"/>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"form-group mt-2\">\n                <select className=\"form-control\" onChange={changeHandler} value={option}>\n                    <option value=\"global\">Global</option>\n                    {\n                        countries.map((ct, index) => {\n                            return (<option value={ct.iso3} key={index}>{ct.name}</option>)\n                        })\n                    }\n                </select>\n            </div>\n\n            <Switch>\n                <Route exact=\"exact\" path=\"/covid-tracker\">\n                    <ChartGlobal/>\n                </Route>\n                <Route path=\"/:iso\">\n                    <ChartCountry/>\n                </Route>\n            </Switch>\n\n        </div>\n    );\n}\n\nexport default Cards;","import React from 'react';\nimport Card from './Components/Cards/Cards';\n\nfunction App(props) {\n    return (\n\n            <div>\n                <img src=\"/covid-tracker/asset/img/logo.png\" alt=\"corona logo\" className=\"mt-3 mx-auto d-block\" />\n                <Card/>\n            </div>\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  \n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}